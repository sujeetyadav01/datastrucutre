{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red29\green38\blue42;\red67\green91\blue103;
\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;\cssrgb\c14902\c19608\c21961;\cssrgb\c32941\c43137\c47843;
\cssrgb\c96863\c97647\c98039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
Q:1\
\pard\pardeftab720\partightenfactor0

\fs28 \cf3 Given two sorted arrays 
\f1\fs26 \cf4 \cb5 nums1
\f0\fs28 \cf3 \cb1  and 
\f1\fs26 \cf4 \cb5 nums2
\f0\fs28 \cf3 \cb1  of size 
\f1\fs26 \cf4 \cb5 m
\f0\fs28 \cf3 \cb1  and 
\f1\fs26 \cf4 \cb5 n
\f0\fs28 \cf3 \cb1  respectively, return the median of the two sorted arrays.\
Follow up: The overall run time complexity should be 
\f1\fs26 \cf4 \cb5 O(log (m+n))
\f0\fs28 \cf3 \cb1 .\
 \
Example 1:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb5 Input: nums1 = [1,3], nums2 = [2]\
Output: 2.00000\
Explanation: merged array = [1,2,3] and median is 2.\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf3 \cb1 Example 2:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb5 Input: nums1 = [1,2], nums2 = [3,4]\
Output: 2.50000\
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf3 \cb1 Example 3:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb5 Input: nums1 = [0,0], nums2 = [0,0]\
Output: 0.00000\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf3 \cb1 Example 4:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb5 Input: nums1 = [], nums2 = [1]\
Output: 1.00000\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf3 \cb1 Example 5:\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf3 \cb5 Input: nums1 = [2], nums2 = []\
Output: 2.00000\
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2 \cb1 \
\
\pard\pardeftab720\partightenfactor0

\fs26 \cf2 class Solution \{\
    public double findMedianSortedArrays(int[] nums1, int[] nums2) \{\
        int m=nums1.length;\
        int n=nums2.length;\
        int[] arr3=new int[m+n];\
        int i=0,j=0,k=0;\
        while(i<m && j<n)\
        \{\
           if (nums1[i] < nums2[j]) \
                arr3[k++] = nums1[i++]; \
            else\
                arr3[k++] = nums2[j++]; \
        \}\
        while(i<m)\
        \{\
           arr3[k++]=nums1[i];  \
                i++; \
        \}\
        while(j<n)\
        \{\
           arr3[k++]=nums2[j];  \
                j++; \
        \}\
        \
        if((m+n)%2==0)\
        \{\
            int index=(m+n)/2;\
            double val=(arr3[index-1]+arr3[index]);\
            double res;\
            res=val/2;\
            // System.out.println(arr3[index-1]);\
            // System.out.println(arr3[index]);\
            // System.out.println(res);\
            return res;\
        \}\
        else\
        \{\
            return arr3[(m+n)/2];\
        \}\
    \}\
\}}